import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Header from "../src/components/Header";
import Footer from "../src/components/Footer";
import MainTitle from "../src/components/MainTitle";
import Card from "../src/components/Card";
import { useState, useEffect } from "react";

export default function Home() {
  function formatNumber(num) {
    return num.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1 ");
  }

  const date = new Date().toLocaleDateString("en-ca");
  const api_key = "B4DQRI1Ab1o6heEM4WLk5arHlmHMpgcNil3e83Qp";
  const url = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${date}&end_date=${date}&api_key=`;
  const [link, setLink] = useState("");
  const [cards, setCards] = useState([]);

  useEffect(() => {
    (async () => {
      let asteroids = [];
      const link = await fetch(`${url}${api_key}`)
        .then((res) => res.json())
        .then((res) => {
          let date = new Date().toLocaleDateString("en-ca");
          let nearEarthObjects = res.near_earth_objects;
          for (let i = 0; i < nearEarthObjects[date].length; i++) {
            let obj = nearEarthObjects[date][i];
            console.log('obj',obj);
            let lunarDistance = obj.close_approach_data[0].miss_distance.lunar;
            let kilometers =
              obj.close_approach_data[0].miss_distance.kilometers;
            let card__danger = obj.is_potentially_hazardous_asteroid;
            let diameter = obj.absolute_magnitude_h;
            asteroids.push({
              id: `${i}`,
              name: `Астероид ${obj.name}`,
              lunarDistance: parseInt(lunarDistance),
              absoluteMag: diameter,
              danger: card__danger,
              kilometers: formatNumber(parseInt(kilometers)),
            });
          }

          setCards(asteroids);
        });
    })();
  }, []);

  /* fetch(`${url}${api_key}`)
    .then((res) => {
      console.log(res);
      return res.json();
    })
    .then((res) => {
      let date = new Date().toLocaleDateString("en-ca");
      let nearEarthObjects = res.near_earth_objects;
      for (let i = 0; i < nearEarthObjects[date].length; i++) {
        let obj = nearEarthObjects[date][i];
        let lunarDistance = obj.close_approach_data[0].miss_distance.lunar;
        let kilometers = obj.close_approach_data[0].miss_distance.kilometers;
        let card__danger = obj.is_potentially_hazardous_asteroid;
        let diameter = obj.absolute_magnitude_h;
        /*setCards([
          ...cards,
          {
            name: `Астероид ${obj.name}`,
            lunarDistance: parseInt(lunarDistance),
            absoluteMag: diameter,
            danger: card__danger,
            kilometers: formatNumber(parseInt(kilometers)),
          },
        ]);
        asteroids.push({
          name: `Астероид ${obj.name}`,
          lunarDistance: parseInt(lunarDistance),
          absoluteMag: diameter,
          danger: card__danger,
          kilometers: formatNumber(parseInt(kilometers)),
        });
      }
      console.log(asteroids);
      setCards([asteroids]);
      console.log("cards", cards);
    });*/
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header></Header>
      <MainTitle cards={cards}></MainTitle>
      <Footer />
    </div>
  );
}
